# Get this figure: fig = py.get_figure("https://plot.ly/~jackluo/2125/")
# Get this figure's data: data = py.get_figure("https://plot.ly/~jackluo/2125/").get_data()
# Add data to this figure: py.plot(Data([Scatter(x=[1, 2], y=[2, 3])]), filename ="Plot 2125", fileopt="extend")
# Get y data of first trace: y1 = py.get_figure("https://plot.ly/~jackluo/2125/").get_data()[0]["y"]

# Get figure documentation: https://plot.ly/python/get-requests/
# Add data documentation: https://plot.ly/python/file-options/

# If you're using unicode in your file, you may need to specify the encoding.
# You can reproduce this figure in Python with the following code!

# Learn about API authentication here: https://plot.ly/python/getting-started
# Find your api_key here: https://plot.ly/settings/api

import plotly.plotly as py
from plotly.graph_objs import *
trace1 = {
  "x": ["2014-01-02", "2014-01-03", "2014-01-06", "2014-01-07", "2014-01-08", "2014-01-09", "2014-01-10", "2014-01-13", "2014-01-14", "2014-01-15", "2014-01-16", "2014-01-17", "2014-01-21", "2014-01-22", "2014-01-23", "2014-01-24", "2014-01-27", "2014-01-28", "2014-01-29", "2014-01-30", "2014-01-31", "2014-02-03", "2014-02-04", "2014-02-05", "2014-02-06", "2014-02-07", "2014-02-10", "2014-02-11", "2014-02-12", "2014-02-13", "2014-02-14", "2014-02-18", "2014-02-19", "2014-02-20", "2014-02-21", "2014-02-24", "2014-02-25", "2014-02-26", "2014-02-27", "2014-02-28", "2014-03-03", "2014-03-04", "2014-03-05", "2014-03-06", "2014-03-07", "2014-03-10", "2014-03-11", "2014-03-12", "2014-03-13", "2014-03-14", "2014-03-17", "2014-03-18", "2014-03-19", "2014-03-20", "2014-03-21", "2014-03-24", "2014-03-25", "2014-03-26", "2014-03-27", "2014-03-28", "2014-03-31", "2014-04-01", "2014-04-02", "2014-04-03", "2014-04-04", "2014-04-07", "2014-04-08", "2014-04-09", "2014-04-10", "2014-04-11", "2014-04-14", "2014-04-15", "2014-04-16", "2014-04-17", "2014-04-21", "2014-04-22", "2014-04-23", "2014-04-24", "2014-04-25", "2014-04-28", "2014-04-29", "2014-04-30", "2014-05-01", "2014-05-02", "2014-05-05", "2014-05-06", "2014-05-07", "2014-05-08", "2014-05-09", "2014-05-12", "2014-05-13", "2014-05-14", "2014-05-15", "2014-05-16", "2014-05-19", "2014-05-20", "2014-05-21", "2014-05-22", "2014-05-23", "2014-05-27", "2014-05-28", "2014-05-29", "2014-05-30", "2014-06-02", "2014-06-03", "2014-06-04", "2014-06-05", "2014-06-06", "2014-06-09", "2014-06-10", "2014-06-11", "2014-06-12", "2014-06-13", "2014-06-16", "2014-06-17", "2014-06-18", "2014-06-19", "2014-06-20", "2014-06-23", "2014-06-24", "2014-06-25", "2014-06-26", "2014-06-27", "2014-06-30", "2014-07-01", "2014-07-02", "2014-07-03", "2014-07-07", "2014-07-08", "2014-07-09", "2014-07-10", "2014-07-11", "2014-07-14", "2014-07-15", "2014-07-16", "2014-07-17", "2014-07-18", "2014-07-21", "2014-07-22", "2014-07-23", "2014-07-24", "2014-07-25", "2014-07-28", "2014-07-29", "2014-07-30", "2014-07-31", "2014-08-01", "2014-08-04", "2014-08-05", "2014-08-06", "2014-08-07", "2014-08-08", "2014-08-11", "2014-08-12", "2014-08-13", "2014-08-14", "2014-08-15", "2014-08-18", "2014-08-19", "2014-08-20", "2014-08-21", "2014-08-22", "2014-08-25", "2014-08-26", "2014-08-27", "2014-08-28", "2014-08-29", "2014-09-02", "2014-09-03", "2014-09-04", "2014-09-05", "2014-09-08", "2014-09-09", "2014-09-10", "2014-09-11", "2014-09-12", "2014-09-15", "2014-09-16", "2014-09-17", "2014-09-18", "2014-09-19", "2014-09-22", "2014-09-23", "2014-09-24", "2014-09-25", "2014-09-26", "2014-09-29", "2014-09-30", "2014-10-01", "2014-10-02", "2014-10-03", "2014-10-06", "2014-10-07", "2014-10-08", "2014-10-09", "2014-10-10", "2014-10-13", "2014-10-14", "2014-10-15", "2014-10-16", "2014-10-17", "2014-10-20", "2014-10-21", "2014-10-22", "2014-10-23", "2014-10-24", "2014-10-27", "2014-10-28", "2014-10-29", "2014-10-30", "2014-10-31", "2014-11-03", "2014-11-04", "2014-11-05", "2014-11-06", "2014-11-07", "2014-11-10", "2014-11-11", "2014-11-12", "2014-11-13", "2014-11-14", "2014-11-17", "2014-11-18", "2014-11-19", "2014-11-20", "2014-11-21", "2014-11-24", "2014-11-25", "2014-11-26", "2014-11-28", "2014-12-01", "2014-12-02", "2014-12-03", "2014-12-04", "2014-12-05", "2014-12-08", "2014-12-09", "2014-12-10", "2014-12-11", "2014-12-12"],
  "y": [77.44539475, 77.04557544, 74.89697204, 75.856461, 75.09194679, 76.20263178, 75.2301837, 73.84891755, 75.0113527, 77.14481412, 77.33058367, 76.85652616, 75.39394758, 76.7763823, 76.64038513, 77.20512022, 76.66007339, 70.90497216, 70.23598702, 70.03463724, 69.00470795, 70.04050186, 70.50025256, 70.599595, 71.50652865, 73.09834283, 72.71181988, 74.38994589, 75.2743945, 74.9602296, 76.05688873, 76.55140204, 76.37468597, 74.7279776, 74.69710728, 73.34314093, 74.21622457, 73.40762211, 72.50368071, 74.17817422, 73.38154805, 74.44635193, 74.43810354, 74.69600358, 74.46113283, 74.07111203, 75.07027178, 74.93559065, 75.35199472, 74.13480798, 73.98459392, 73.7289236, 74.62019501, 74.28682958, 74.57820913, 75.48205234, 75.92068662, 76.62498351, 75.70890299, 75.47469806, 75.5990936, 75.39461719, 76.03616773, 75.90452792, 75.68018051, 74.02790571, 73.62532898, 73.27327651, 74.39941392, 72.7644772, 73.1708442, 72.94387096, 72.62541762, 72.897474, 73.65263437, 74.06474967, 74.17426241, 79.66168695, 79.14119558, 80.30519282, 83.23767089, 83.08750733, 82.99289917, 83.04635189, 82.73311868, 84.3659999, 83.449361, 82.92665266, 82.40901903, 82.82714134, 83.46187012, 83.516998, 83.83894399, 82.98805242, 84.28974015, 85.22180467, 85.13035972, 85.51554663, 85.61005813, 86.82546553, 88.25336036, 88.51837168, 89.94207773, 89.37862849, 88.59990714, 89.8695301, 91.09787905, 91.62042691, 91.483127, 93.48368488, 92.89646175, 92.80705602, 90.98790535, 90.30905531, 91.09697763, 91.05881862, 91.07433595, 90.64769552, 90.12358031, 89.55380483, 89.02197543, 89.18693839, 89.62525984, 90.89089637, 92.29, 92.63486842, 92.43474742, 92.90402626, 95.00793917, 94.1893448, 92.52683502, 94.10816215, 94.59776879, 95.53059169, 95.69111732, 93.78457514, 92.39063645, 93.74625186, 93.44052365, 94.16331104, 95.75986808, 95.58074639, 96.53575439, 98.0275432, 97.14618849, 95.87943933, 93.65612192, 95.09971859, 94.10684609, 93.50276432, 94.14628493, 93.48395187, 94.48592562, 95.24942378, 95.3589675, 96.53139487, 97.09066136, 97.67554054, 98.58924699, 99.61107288, 99.74008252, 99.46843762, 100.9479319, 100.5856398, 100.1891295, 100.755422, 102.0170498, 102.2119748, 102.255943, 98.03397371, 97.99139133, 98.48225905, 98.2609899, 97.20457129, 99.58834664, 100.3737183, 101.960247, 98.97872298, 100.4325635, 101.0888447, 101.449066, 100.9639224, 99.77669525, 101.3166152, 99.67815061, 97.71828883, 97.84195885, 99.97950571, 99.75834241, 98.45517117, 98.62148163, 99.12728368, 98.61442228, 97.94679762, 100.7057276, 99.86032959, 100.4975123, 99.56654785, 97.16647324, 94.76582693, 96.70139244, 97.51183641, 102.1754914, 101.991238, 103.2261528, 104.3103307, 103.982152, 104.5310474, 105.7756568, 106.0801645, 107.1199176, 107.3297075, 108.4637716, 108.1980158, 108.1703956, 108.3210256, 108.5892493, 108.2739198, 108.947396, 111.363978, 112.7040594, 113.8188946, 113.4959626, 114.9869783, 114.4555369, 117.0458925, 116.3870522, 118.60425, 117.4741866, 118.7986564, 118.3453741, 113.054436, 115.2907142, 115.318909, 115.5361261, 113.6533452, 109.7554968, 113.9603314, 111.8174772, 110.0271393],
  "marker": {"size": 4},
  "mode": "markers",
  "name": "AAPL",
  "type": "scatter",
  "uid": "71ad91",
  "xsrc": "jackluo:2124:15ae9f",
  "ysrc": "jackluo:2124:87f861"
}
trace2 = {
  "type": "scatter",
  "uid": "82d3c6"
}
data = Data([trace1, trace2])
layout = {
  "autosize": True,
  "height": 872,
  "hovermode": "closest",
  "showlegend": True,
  "width": 1586,
  "xaxis": {
    "autorange": True,
    "range": ["2013-12-12 21:28:09.4901", "2015-01-01 02:31:50.5099"],
    "type": "date"
  },
  "yaxis": {
    "autorange": True,
    "range": [65.9692791859, 121.834085164],
    "type": "linear"
  }
}
fig = Figure(data=data, layout=layout)
plot_url = py.plot(fig)
